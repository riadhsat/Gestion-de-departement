package com.projetIF4.model;

//Generated 24 mars 2014 18:11:52 by Hibernate Tools 3.6.0

//~--- non-JDK imports --------------------------------------------------------

import com.projetIF4.hibernate.HibernateUtil;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 * Section generated by hbm2java
 */
public class Section implements java.io.Serializable {
    private Set     etudiants = new HashSet(0);
    private Integer codesec;
    private String  section;
    private boolean terminal;

    /**
     *
     */
    public Section() {}

    /**
     *
     * @param section
     */
    public Section(String section) {
        this.section = section;
    }

    /**
     *
     * @param section
     * @param etudiants
     */
    public Section(String section, Set etudiants) {
        this.section   = section;
        this.etudiants = etudiants;
    }

    /**
     *
     * @return
     */
    public Integer getCodesec() {
        return this.codesec;
    }

    /**
     *
     * @param codesec
     */
    public void setCodesec(Integer codesec) {
        this.codesec = codesec;
    }

    /**
     *
     * @return
     */
    public String getSection() {
        return this.section;
    }

    /**
     *
     * @param section
     */
    public void setSection(String section) {
        this.section = section;
    }

    public boolean isTerminal() {
        return terminal;
    }

    public void setTerminal(boolean terminal) {
        this.terminal = terminal;
    }
    
    

    /**
     *
     * @return
     */
    public Set getEtudiants() {
        return this.etudiants;
    }

    /**
     *
     * @param etudiants
     */
    public void setEtudiants(Set etudiants) {
        this.etudiants = etudiants;
    }

    @Override
    public int hashCode() {
        int hash = 7;

        hash = 53 * hash + Objects.hashCode(this.codesec);
        hash = 53 * hash + Objects.hashCode(this.section);

        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        if (getClass() != obj.getClass()) {
            return false;
        }

        final Section other = (Section) obj;

        if (!Objects.equals(this.codesec, other.codesec)) {
            return false;
        }

        if (!Objects.equals(this.section, other.section)) {
            return false;
        }

        return true;
    }

    /**
     *
     * @return
     */
    public boolean save() {
        final Session session = HibernateUtil.currentSession();

        try {
            final Transaction transaction = session.beginTransaction();

            try {
                session.save(this);
                transaction.commit();

                return true;
            } catch (Exception ex) {

                // Log the exception here
                transaction.rollback();

                return false;
            }
        } finally {
            HibernateUtil.closeSession();
        }
    }

    /**
     *
     * @return
     */
    public boolean delete() {
        final Session session = HibernateUtil.currentSession();

        try {
            final Transaction transaction = session.beginTransaction();

            try {
                session.delete(this);
                transaction.commit();

                return true;
            } catch (Exception ex) {

                // Log the exception here
                transaction.rollback();

                return false;
            }
        } finally {
            HibernateUtil.closeSession();
        }
    }

    /**
     *
     * @return
     */
    public boolean update() {
        final Session session = HibernateUtil.currentSession();

        try {
            final Transaction transaction = session.beginTransaction();

            try {
                session.merge(this);
                transaction.commit();

                return true;
            } catch (Exception ex) {

                // Log the exception here
                transaction.rollback();

                return false;
            }
        } finally {
            HibernateUtil.closeSession();
        }
    }
}
