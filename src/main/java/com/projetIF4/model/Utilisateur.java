package com.projetIF4.model;

//~--- non-JDK imports --------------------------------------------------------

import com.projetIF4.hibernate.HibernateUtil;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import org.hibernate.Session;
import org.hibernate.Transaction;

//Generated 29 mars 2014 16:58:03 by Hibernate Tools 3.6.0

/**
 * Utilisateur generated by hbm2java
 */
public class Utilisateur implements java.io.Serializable {
    private int    cin;
    private String login;
    private String pass;
    private String type;
    private Set notifications = new HashSet(0);
    /**
     *
     */
    public Utilisateur() {}

    /**
     *
     * @param cin
     * @param login
     * @param pass
     * @param type
     */
    public Utilisateur(int cin, String login, String pass, String type) {
        this.cin   = cin;
        this.login = login;
        this.pass  = pass;
        this.type  = type;
    }
    /**
     *
     * @param cin
     * @param login
     * @param pass
     * @param type
     * @param notifications
     */
    public Utilisateur(int cin, String login, String pass, String type,Set notifications) {
        this.cin   = cin;
        this.login = login;
        this.pass  = pass;
        this.type  = type;
        this.notifications = notifications;
    }

    /**
     *
     * @return
     */
    public Set getNotifications() {
        return notifications;
    }

    /**
     *
     * @param notifications
     */
    public void setNotifications(Set notifications) {
        this.notifications = notifications;
    }

    /**
     *
     * @return
     */
    public int getCin() {
        return this.cin;
    }

    /**
     *
     * @param cin
     */
    public void setCin(int cin) {
        this.cin = cin;
    }

    /**
     *
     * @return
     */
    public String getLogin() {
        return this.login;
    }

    /**
     *
     * @param login
     */
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     *
     * @return
     */
    public String getPass() {
        return this.pass;
    }

    /**
     *
     * @param pass
     */
    public void setPass(String pass) {
        this.pass = pass;
    }

    /**
     *
     * @return
     */
    public String getType() {
        return this.type;
    }

    /**
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }

    @Override
    public int hashCode() {
        int hash = 5;

        hash = 29 * hash + this.cin;
        hash = 29 * hash + Objects.hashCode(this.login);
        hash = 29 * hash + Objects.hashCode(this.pass);
        hash = 29 * hash + Objects.hashCode(this.type);

        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        if (getClass() != obj.getClass()) {
            return false;
        }

        final Utilisateur other = (Utilisateur) obj;

        if (this.cin != other.cin) {
            return false;
        }

        if (!Objects.equals(this.login, other.login)) {
            return false;
        }

        if (!Objects.equals(this.pass, other.pass)) {
            return false;
        }

        if (!Objects.equals(this.type, other.type)) {
            return false;
        }

        return true;
    }

    /**
     *
     * @return
     */
    public boolean save() {
        final Session session = HibernateUtil.currentSession();

        try {
            final Transaction transaction = session.beginTransaction();

            try {
                session.save(this);
                transaction.commit();

                return true;
            } catch (Exception ex) {

                // Log the exception here
                transaction.rollback();

                return false;
            }
        } finally {
            HibernateUtil.closeSession();
        }
    }

    /**
     *
     * @return
     */
    public boolean update() {
        final Session session = HibernateUtil.currentSession();

        try {
            final Transaction transaction = session.beginTransaction();

            try {
                session.merge(this);
                transaction.commit();

                return true;
            } catch (Exception ex) {

                // Log the exception here
                transaction.rollback();

                return false;
            }
        } finally {
            HibernateUtil.closeSession();
        }
    }

    /**
     *
     * @return
     */
    public boolean delete() {
        final Session session = HibernateUtil.currentSession();

        try {
            final Transaction transaction = session.beginTransaction();

            try {
                session.delete(this);
                transaction.commit();

                return true;
            } catch (Exception ex) {

                // Log the exception here
                transaction.rollback();

                return false;
            }
        } finally {
            HibernateUtil.closeSession();
        }
    }

    
}
